<?xml version="1.0" encoding="utf-8" standalone="no"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
	<file original="wordpress" vscom-xliff-id="41863-798c6548fc0f92d4bf08506d7544cb36" source-language="en" target-language="de" parent-post-id="175" version="20" datatype="xml">		
	<header><reference><external-file href="https://visualstudio.microsoft.com/vs/"/></reference>
		<skl>
			<internal-file><![CDATA[]]>
			</internal-file>
		</skl>
	</header>
		<body>
			         <trans-unit translate="yes" extradata="field-_yoast_wpseo_title-0" id="0" xml:space="preserve">
            <source>Visual Studio IDE</source>
            <target state="new">Visual Studio IDE</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="field-_yoast_wpseo_metadesc-0" id="1" xml:space="preserve">
            <source>Fully-featured IDE for Android, iOS, Windows, web, &amp; cloud. Learn more about Visual Studio's Integrated Development Environment. Free trial.</source>
            <target state="new">Fully-featured IDE for Android, iOS, Windows, web, &amp; cloud. Learn more about Visual Studio's Integrated Development Environment. Free trial.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="field-_yoast_wpseo_focuskw-0" id="2" xml:space="preserve">
            <source>IDE</source>
            <target state="new">IDE</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="field-_yoast_wpseo_opengraph-description-0" id="3" xml:space="preserve">
            <source>Write code using code completions, debugging, testing, Git management, and cloud deployments with Visual Studio. Download Community for free today.</source>
            <target state="new">Write code using code completions, debugging, testing, Git management, and cloud deployments with Visual Studio. Download Community for free today.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="field-_yoast_wpseo_twitter-title-0" id="4" xml:space="preserve">
            <source>Visual Studio 2019 | Download for free</source>
            <target state="new">Visual Studio 2019 | Download for free</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="field-_yoast_wpseo_twitter-description-0" id="5" xml:space="preserve">
            <source>Write code using code completions, debugging, testing, Git management, and cloud deployments with Visual Studio. Download Community for free today.</source>
            <target state="new">Write code using code completions, debugging, testing, Git management, and cloud deployments with Visual Studio. Download Community for free today.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="field-_yoast_wpseo_opengraph-title-0" id="6" xml:space="preserve">
            <source>Visual Studio 2019 | Download for free</source>
            <target state="new">Visual Studio 2019 | Download for free</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="title" id="7" xml:space="preserve">
            <source>Visual Studio IDE | Microsoft Visual Studio</source>
            <target state="new">Visual Studio IDE | Microsoft Visual Studio</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%0%_" id="8" xml:space="preserve">
            <source>Windows</source>
            <target state="new">Windows</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%1%_" id="9" xml:space="preserve">
            <source>macOS</source>
            <target state="new">macOS</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%2%_" id="10" xml:space="preserve">
            <source>Visual Studio 2019</source>
            <target state="new">Visual Studio 2019</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%3%_" id="11" xml:space="preserve">
            <source>Code faster.</source>
            <target state="new">Code faster.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%4%_" id="12" xml:space="preserve">
            <source> Work smarter.</source>
            <target state="new"> Work smarter.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%5%_" id="13" xml:space="preserve">
            <source> Create the future with the best-in-class IDE.</source>
            <target state="new"> Create the future with the best-in-class IDE.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%6%_" id="14" xml:space="preserve">
            <source> Develop with the entire toolset from initial design to final deployment </source>
            <target state="new"> Develop with the entire toolset from initial design to final deployment </target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%7%_" id="15" xml:space="preserve">
            <source>What's new</source>
            <target state="new">What's new</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%8%_" id="16" xml:space="preserve">
            <source>Preview Visual Studio</source>
            <target state="new">Preview Visual Studio</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%9%_" id="17" xml:space="preserve">
            <source> Develop with the entire toolset from initial design to final deployment </source>
            <target state="new"> Develop with the entire toolset from initial design to final deployment </target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%10%_" id="18" xml:space="preserve">
            <source><bpt id="p1">&lt;li class="vscom-list-item vscom-list-item--checkmark"&gt;</bpt>Improved <bpt id="p2">&lt;a href="https://visualstudio.microsoft.com/vs/features/ide/" target="_blank" rel="noopener"&gt;</bpt>IntelliSense<ept id="p2">&lt;/a&gt;</ept> performance for C++ files<ept id="p1">&lt;/li&gt;</ept></source>
            <target state="new"><bpt id="p1">&lt;li class="vscom-list-item vscom-list-item--checkmark"&gt;</bpt>Improved <bpt id="p2">&lt;a href="https://visualstudio.microsoft.com/vs/features/ide/" target="_blank" rel="noopener"&gt;</bpt>IntelliSense<ept id="p2">&lt;/a&gt;</ept> performance for C++ files<ept id="p1">&lt;/li&gt;</ept></target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%11%_" id="19" xml:space="preserve">
            <source><bpt id="p1">&lt;li class="vscom-list-item vscom-list-item--checkmark"&gt;</bpt>Local <bpt id="p2">&lt;a href="https://visualstudio.microsoft.com/vs/debug-in-azure/" target="_blank" rel="noopener"&gt;</bpt>development<ept id="p2">&lt;/a&gt;</ept> with many common emulators<ept id="p1">&lt;/li&gt;</ept></source>
            <target state="new"><bpt id="p1">&lt;li class="vscom-list-item vscom-list-item--checkmark"&gt;</bpt>Local <bpt id="p2">&lt;a href="https://visualstudio.microsoft.com/vs/debug-in-azure/" target="_blank" rel="noopener"&gt;</bpt>development<ept id="p2">&lt;/a&gt;</ept> with many common emulators<ept id="p1">&lt;/li&gt;</ept></target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%12%_" id="20" xml:space="preserve">
            <source><bpt id="p1">&lt;li class="vscom-list-item vscom-list-item--checkmark"&gt;</bpt>Simplified test access in <bpt id="p2">&lt;a href="https://visualstudio.microsoft.com/vs/features/testing-tools/" target="_blank" rel="noopener"&gt;</bpt>Solution Explorer<ept id="p2">&lt;/a&gt;</ept>
<ept id="p1">&lt;/li&gt;</ept></source>
            <target state="new"><bpt id="p1">&lt;li class="vscom-list-item vscom-list-item--checkmark"&gt;</bpt>Simplified test access in <bpt id="p2">&lt;a href="https://visualstudio.microsoft.com/vs/features/testing-tools/" target="_blank" rel="noopener"&gt;</bpt>Solution Explorer<ept id="p2">&lt;/a&gt;</ept>
<ept id="p1">&lt;/li&gt;</ept></target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%13%_" id="21" xml:space="preserve">
            <source><bpt id="p1">&lt;li class="vscom-list-item vscom-list-item--checkmark"&gt;</bpt>
<bpt id="p2">&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.GitHubExtensionforVisualStudio" target="_blank" rel="nofollow noopener"&gt;</bpt>Git management<ept id="p2">&lt;/a&gt;</ept> and repo creation in the IDE<ept id="p1">&lt;/li&gt;</ept></source>
            <target state="new"><bpt id="p1">&lt;li class="vscom-list-item vscom-list-item--checkmark"&gt;</bpt>
<bpt id="p2">&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.GitHubExtensionforVisualStudio" target="_blank" rel="nofollow noopener"&gt;</bpt>Git management<ept id="p2">&lt;/a&gt;</ept> and repo creation in the IDE<ept id="p1">&lt;/li&gt;</ept></target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%14%_" id="22" xml:space="preserve">
            <source><bpt id="p1">&lt;li class="vscom-list-item vscom-list-item--checkmark"&gt;</bpt>
<bpt id="p2">&lt;a href="https://devblogs.microsoft.com/visualstudio/debug-your-live-apps-running-in-azure-virtual-machines-and-azure-kubernetes/" target="_blank" rel="nofollow noopener"&gt;</bpt>Kubernetes<ept id="p2">&lt;/a&gt;</ept> support now included in Microsoft Azure workload<ept id="p1">&lt;/li&gt;</ept></source>
            <target state="new"><bpt id="p1">&lt;li class="vscom-list-item vscom-list-item--checkmark"&gt;</bpt>
<bpt id="p2">&lt;a href="https://devblogs.microsoft.com/visualstudio/debug-your-live-apps-running-in-azure-virtual-machines-and-azure-kubernetes/" target="_blank" rel="nofollow noopener"&gt;</bpt>Kubernetes<ept id="p2">&lt;/a&gt;</ept> support now included in Microsoft Azure workload<ept id="p1">&lt;/li&gt;</ept></target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%15%_" id="23" xml:space="preserve">
            <source>What's new</source>
            <target state="new">What's new</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%16%_" id="24" xml:space="preserve">
            <source>Preview Visual Studio</source>
            <target state="new">Preview Visual Studio</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%17%_" id="25" xml:space="preserve">
            <source>Develop</source>
            <target state="new">Develop</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%18%_" id="26" xml:space="preserve">
            <source>Write code with fewer errors</source>
            <target state="new">Write code with fewer errors</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%19%_" id="27" xml:space="preserve">
            <source>Type variables quickly and accurately, using </source>
            <target state="new">Type variables quickly and accurately, using </target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%20%_" id="28" xml:space="preserve">
            <source>IntelliSense</source>
            <target state="new">IntelliSense</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%21%_" id="29" xml:space="preserve">
            <source> code suggestions if you get stuck.</source>
            <target state="new"> code suggestions if you get stuck.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%22%_" id="30" xml:space="preserve">
            <source> Maintain speed no matter the complexity as you navigate to any file, type, member, or symbol declaration you need.</source>
            <target state="new"> Maintain speed no matter the complexity as you navigate to any file, type, member, or symbol declaration you need.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%23%_" id="31" xml:space="preserve">
            <source> Make quick improvements to your code using lightbulbs that suggest actions such as renaming a function or adding a parameter.

</source>
            <target state="new"> Make quick improvements to your code using lightbulbs that suggest actions such as renaming a function or adding a parameter.

</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%24%_" id="32" xml:space="preserve">
            <source>All develop features </source>
            <target state="new">All develop features </target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%25%_" id="33" xml:space="preserve">
            <source>Analyze</source>
            <target state="new">Analyze</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%26%_" id="34" xml:space="preserve">
            <source>Learn more about your code</source>
            <target state="new">Learn more about your code</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%27%_" id="35" xml:space="preserve">
            <source>CodeLens</source>
            <target state="new">CodeLens</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%28%_" id="36" xml:space="preserve">
            <source> helps you easily find important insight such as what changes have been made to your code, the impact of those changes, and whether your method has been unit tested.</source>
            <target state="new"> helps you easily find important insight such as what changes have been made to your code, the impact of those changes, and whether your method has been unit tested.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%29%_" id="37" xml:space="preserve">
            <source> See references, authors, tests, commit history, and other essential information at a glance.

</source>
            <target state="new"> See references, authors, tests, commit history, and other essential information at a glance.

</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%30%_" id="38" xml:space="preserve">
            <source>All analyze features </source>
            <target state="new">All analyze features </target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%31%_" id="39" xml:space="preserve">
            <source>Debug</source>
            <target state="new">Debug</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%32%_" id="40" xml:space="preserve">
            <source>Quickly find and fix your bugs</source>
            <target state="new">Quickly find and fix your bugs</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%33%_" id="41" xml:space="preserve">
            <source>Visual Studio lets you pause code execution the moment you want to inspect a bug, using the breakpoint and method you need.</source>
            <target state="new">Visual Studio lets you pause code execution the moment you want to inspect a bug, using the breakpoint and method you need.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%34%_" id="42" xml:space="preserve">
            <source> If you’ve taken one step too far or encountered an unexpected change, you can step back to any specific line of code–no need to restart your session or recreate your state.

</source>
            <target state="new"> If you’ve taken one step too far or encountered an unexpected change, you can step back to any specific line of code–no need to restart your session or recreate your state.

</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%35%_" id="43" xml:space="preserve">
            <source>All debug features </source>
            <target state="new">All debug features </target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%36%_" id="44" xml:space="preserve">
            <source>Test</source>
            <target state="new">Test</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%37%_" id="45" xml:space="preserve">
            <source>Work efficiently</source>
            <target state="new">Work efficiently</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%38%_" id="46" xml:space="preserve">
            <source>Easily navigate and organize your test suite so you can analyze how much code you’re testing and see results instantly.</source>
            <target state="new">Easily navigate and organize your test suite so you can analyze how much code you’re testing and see results instantly.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%39%_" id="47" xml:space="preserve">
            <source> Immediately know the impact of every change you make, letting advanced features test code as you type.</source>
            <target state="new"> Immediately know the impact of every change you make, letting advanced features test code as you type.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%40%_" id="48" xml:space="preserve">
            <source> Fix errors as soon as they happen and see if new changes are covered by existing tests.

</source>
            <target state="new"> Fix errors as soon as they happen and see if new changes are covered by existing tests.

</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%41%_" id="49" xml:space="preserve">
            <source>All test features </source>
            <target state="new">All test features </target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%42%_" id="50" xml:space="preserve">
            <source>Collaborate</source>
            <target state="new">Collaborate</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%43%_" id="51" xml:space="preserve">
            <source>Share more than screens</source>
            <target state="new">Share more than screens</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%44%_" id="52" xml:space="preserve">
            <source>Lead your team with quick and natural collaboration using Live Share to edit and debug together in real time, no matter the language or platform.</source>
            <target state="new">Lead your team with quick and natural collaboration using Live Share to edit and debug together in real time, no matter the language or platform.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%45%_" id="53" xml:space="preserve">
            <source> Personalize your session with access controls and custom editor settings that enforce consistent coding styles for everyone.

</source>
            <target state="new"> Personalize your session with access controls and custom editor settings that enforce consistent coding styles for everyone.

</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%46%_" id="54" xml:space="preserve">
            <source>All collaboration features </source>
            <target state="new">All collaboration features </target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%47%_" id="55" xml:space="preserve">
            <source>Deploy</source>
            <target state="new">Deploy</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%48%_" id="56" xml:space="preserve">
            <source>Build for the cloud</source>
            <target state="new">Build for the cloud</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%49%_" id="57" xml:space="preserve">
            <source>Get up and running quickly using templates for common application types and local Azure emulators–no need for an Azure account.</source>
            <target state="new">Get up and running quickly using templates for common application types and local Azure emulators–no need for an Azure account.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%50%_" id="58" xml:space="preserve">
            <source> You can also provision application dependencies such as Azure SQL databases and Azure Storage accounts without leaving Visual Studio.</source>
            <target state="new"> You can also provision application dependencies such as Azure SQL databases and Azure Storage accounts without leaving Visual Studio.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%51%_" id="59" xml:space="preserve">
            <source> Quickly diagnose any issues using Visual Studio’s remote debugger, which attaches directly to your application.

</source>
            <target state="new"> Quickly diagnose any issues using Visual Studio’s remote debugger, which attaches directly to your application.

</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%52%_" id="60" xml:space="preserve">
            <source>All deployment features </source>
            <target state="new">All deployment features </target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%53%_" id="61" xml:space="preserve">
            <source> Visual Studio workloads </source>
            <target state="new"> Visual Studio workloads </target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%54%_" id="62" xml:space="preserve">
            <source> Choose the toolset that will maximize your productivity </source>
            <target state="new"> Choose the toolset that will maximize your productivity </target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%55%_" id="63" xml:space="preserve">
            <source>Web &amp; cloud

</source>
            <target state="new">Web &amp; cloud

</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%56%_" id="64" xml:space="preserve">
            <source>ASP.NET &amp; web development</source>
            <target state="new">ASP.NET &amp; web development</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%57%_" id="65" xml:space="preserve">
            <source>Azure</source>
            <target state="new">Azure</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%58%_" id="66" xml:space="preserve">
            <source>Python</source>
            <target state="new">Python</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%59%_" id="67" xml:space="preserve">
            <source>Node.js</source>
            <target state="new">Node.js</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%60%_" id="68" xml:space="preserve">
            <source>Windows

</source>
            <target state="new">Windows

</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%61%_" id="69" xml:space="preserve">
            <source>.NET desktop development</source>
            <target state="new">.NET desktop development</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%62%_" id="70" xml:space="preserve">
            <source>Desktop development with C++</source>
            <target state="new">Desktop development with C++</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%63%_" id="71" xml:space="preserve">
            <source>UWP development</source>
            <target state="new">UWP development</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%64%_" id="72" xml:space="preserve">
            <source>Mobile &amp; gaming

</source>
            <target state="new">Mobile &amp; gaming

</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%65%_" id="73" xml:space="preserve">
            <source>Mobile development with .NET</source>
            <target state="new">Mobile development with .NET</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%66%_" id="74" xml:space="preserve">
            <source>Mobile development with C++</source>
            <target state="new">Mobile development with C++</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%67%_" id="75" xml:space="preserve">
            <source>Game development with Unity</source>
            <target state="new">Game development with Unity</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%68%_" id="76" xml:space="preserve">
            <source>Game development with C++</source>
            <target state="new">Game development with C++</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%69%_" id="77" xml:space="preserve">
            <source>Other toolsets

</source>
            <target state="new">Other toolsets

</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%70%_" id="78" xml:space="preserve">
            <source>Data storage &amp; processing</source>
            <target state="new">Data storage &amp; processing</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%71%_" id="79" xml:space="preserve">
            <source>Data science &amp; analytical applications</source>
            <target state="new">Data science &amp; analytical applications</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%72%_" id="80" xml:space="preserve">
            <source>Visual Studio extension development</source>
            <target state="new">Visual Studio extension development</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%73%_" id="81" xml:space="preserve">
            <source>Office/SharePoint</source>
            <target state="new">Office/SharePoint</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%74%_" id="82" xml:space="preserve">
            <source>Linux development with C++</source>
            <target state="new">Linux development with C++</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%75%_" id="83" xml:space="preserve">
            <source>.NET Core cross-platform development</source>
            <target state="new">.NET Core cross-platform development</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%76%_" id="84" xml:space="preserve">
            <source>Visual Studio makes Azure development easier</source>
            <target state="new">Visual Studio makes Azure development easier</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%77%_" id="85" xml:space="preserve">
            <source>Get started quickly</source>
            <target state="new">Get started quickly</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%78%_" id="86" xml:space="preserve">
            <source><bpt id="p1">&lt;span&gt;</bpt>Get more done with dedicated project templates for Azure.</source>
            <target state="new"><bpt id="p1">&lt;span&gt;</bpt>Get more done with dedicated project templates for Azure.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%79%_" id="87" xml:space="preserve">
            <source>These Quickstart templates give you a working app so you can immediately deploy to the cloud.<ept id="p">&lt;/span&gt;</ept></source>
            <target state="new">These Quickstart templates give you a working app so you can immediately deploy to the cloud.<ept id="p">&lt;/span&gt;</ept></target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%80%_" id="88" xml:space="preserve">
            <source>Easy deployment</source>
            <target state="new">Easy deployment</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%81%_" id="89" xml:space="preserve">
            <source><bpt id="p1">&lt;span&gt;</bpt>Deploy your application to Azure directly from Visual Studio with one click, easily connecting to your database of choice. <ept id="p1">&lt;/span&gt;</ept></source>
            <target state="new"><bpt id="p1">&lt;span&gt;</bpt>Deploy your application to Azure directly from Visual Studio with one click, easily connecting to your database of choice. <ept id="p1">&lt;/span&gt;</ept></target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%82%_" id="90" xml:space="preserve">
            <source>Remote debugging</source>
            <target state="new">Remote debugging</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%83%_" id="91" xml:space="preserve">
            <source><bpt id="p1">&lt;span&gt;</bpt>If you’re dealing with an issue that is hard to reproduce locally on your machine, you can use Cloud Explorer in Visual Studio to quickly and easily attach the Visual Studio remote debugger to your Azure environment.<ept id="p1">&lt;/span&gt;</ept></source>
            <target state="new"><bpt id="p1">&lt;span&gt;</bpt>If you’re dealing with an issue that is hard to reproduce locally on your machine, you can use Cloud Explorer in Visual Studio to quickly and easily attach the Visual Studio remote debugger to your Azure environment.<ept id="p1">&lt;/span&gt;</ept></target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%84%_" id="92" xml:space="preserve">
            <source>Explore visually</source>
            <target state="new">Explore visually</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%85%_" id="93" xml:space="preserve">
            <source><bpt id="p1">&lt;span&gt;</bpt>Manage and explore your Azure resources and resource groups from Visual Studio using Cloud Explorer.</source>
            <target state="new"><bpt id="p1">&lt;span&gt;</bpt>Manage and explore your Azure resources and resource groups from Visual Studio using Cloud Explorer.</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%86%_" id="94" xml:space="preserve">
            <source>You can inspect their properties and perform key diagnostic actions easily.<ept id="p">&lt;/span&gt;</ept></source>
            <target state="new">You can inspect their properties and perform key diagnostic actions easily.<ept id="p">&lt;/span&gt;</ept></target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%87%_" id="95" xml:space="preserve">
            <source>Extensions and integrations</source>
            <target state="new">Extensions and integrations</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%88%_" id="96" xml:space="preserve">
            <source> Stay comfortable and productive with our most popular add-ons </source>
            <target state="new"> Stay comfortable and productive with our most popular add-ons </target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%89%_" id="97" xml:space="preserve">
            <source><bpt id="p1">&lt;a class="vscom-semibold-link" href="https://marketplace.visualstudio.com" target="_blank" rel="noopener"&gt;</bpt>Browse marketplace <ph id="ph1">&lt;i class="fa vscom-icon vscom-icon--ChevronRight"&gt;&lt;/i&gt;</ph><ept id="p1">&lt;/a&gt;</ept></source>
            <target state="new"><bpt id="p1">&lt;a class="vscom-semibold-link" href="https://marketplace.visualstudio.com" target="_blank" rel="noopener"&gt;</bpt>Browse marketplace <ph id="ph1">&lt;i class="fa vscom-icon vscom-icon--ChevronRight"&gt;&lt;/i&gt;</ph><ept id="p1">&lt;/a&gt;</ept></target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%90%_" id="98" xml:space="preserve">
            <source>Developer Community</source>
            <target state="new">Developer Community</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%91%_" id="99" xml:space="preserve">
            <source>Documentation</source>
            <target state="new">Documentation</target>
         </trans-unit>
         <trans-unit translate="yes" extradata="_%92%_" id="100" xml:space="preserve">
            <source>Blog</source>
            <target state="new">Blog</target>
         </trans-unit>

		</body>
	</file>
</xliff>
